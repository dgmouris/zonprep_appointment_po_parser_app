service: zon_prep_ocr_project

image: <namespace>/zon_prep_ocr_project

env:
  # This is the minimal set of environment variables needed to run the app
  # in production. You can add more here and in the .env file as needed.
  clear:
    DJANGO_SETTINGS_MODULE: zon_prep_ocr_project.settings_production
  secret:
    - POSTGRES_PASSWORD
    - SECRET_KEY
    - DATABASE_URL
    - REDIS_URL
    - TURNSTILE_KEY
    - TURNSTILE_SECRET

# https://kamal-deploy.org/docs/configuration#using-different-roles-for-servers
servers:
  web:
    hosts:
      - <IP-ADDRESS>
    options:
      expose: "8000"
      network: zon_prep_ocr_project-network
    labels:
      traefik.http.routers.zon_prep_ocr_project.rule: Host(`localhost:8000`)
      traefik.http.routers.zon_prep_ocr_project_secure.entrypoints: websecure
      traefik.http.routers.zon_prep_ocr_project_secure.rule: Host(`localhost:8000`)
      traefik.http.routers.zon_prep_ocr_project_secure.tls: true
      traefik.http.routers.zon_prep_ocr_project_secure.tls.certresolver: letsencrypt
  celery:
    hosts:
      - <IP-ADDRESS>
    cmd: celery -A zon_prep_ocr_project worker -l INFO --concurrency 2
    options:
      network: zon_prep_ocr_project-network
    labels:
      traefik.enable: "false"
  celerybeat:
    hosts:
      - <IP-ADDRESS>
    cmd: celery -A zon_prep_ocr_project beat -l INFO
    options:
      network: zon_prep_ocr_project-network
    labels:
      traefik.enable: "false"

# https://kamal-deploy.org/docs/configuration#using-a-custom-healthcheck
healthcheck:
  path: /
  port: 8000
  max_attempts: 15
  interval: 20s

# To use a non-root user see https://kamal-deploy.org/docs/configuration#using-a-different-ssh-user-than-root
ssh:
  user: kamal

# https://kamal-deploy.org/docs/configuration#using-a-different-dockerfile-or-context-when-building
# Set multiarch to false for better performance if you are building your image on the same architecture as your server
builder:
  multiarch: true
  dockerfile: '../Dockerfile.web'
  context: '../'

# See https://kamal-deploy.org/docs/configuration#using-another-registry-than-docker-hub
registry:
  username: <DOCKER REGISTRY USERNAME>
  password:
    - KAMAL_REGISTRY_PASSWORD

accessories:
  # docker hostname will be 'zon_prep_ocr_project-postgres'
  postgres:
    image: postgres
    host: <IP-ADDRESS>
    directories:
      - data:/var/lib/postgresql/data
    options:
      network: zon_prep_ocr_project-network
    env:
      clear:
        POSTGRES_USER: zon_prep_ocr_project
        POSTGRES_DB: zon_prep_ocr_project
      secret:
        - POSTGRES_PASSWORD
  ## docker hostname will be 'zon_prep_ocr_project-redis'
  redis:
    image: redis
    host: <IP-ADDRESS>
    options:
      network: zon_prep_ocr_project-network

traefik:
  options:
    network: zon_prep_ocr_project-network
    publish:
      - 443:443
    volume:
      - "/letsencrypt/acme.json:/letsencrypt/acme.json"
  args:
    entryPoints.web.address: ":80"
    entryPoints.websecure.address: ":443"
    certificatesResolvers.letsencrypt.acme.email: "dgmouris@gmail.com"
    certificatesResolvers.letsencrypt.acme.storage: "/letsencrypt/acme.json"
    certificatesResolvers.letsencrypt.acme.httpchallenge: true
    certificatesResolvers.letsencrypt.acme.httpchallenge.entrypoint: web
